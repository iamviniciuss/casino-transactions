version: '3.8'

services:
  casino-api: 
    build:
      context: ./
      dockerfile: ./Dockerfile.api.dev
    volumes:
      - .:/app
      - ./.build/.docker/api/gocache/:/go/pkg/mod/cache/
      - ./:/app
    ports:
      - 9095:9095
    environment:
      - KAFKA_URL=kafka:29092
    depends_on:
      zookeeper: 
        condition: service_healthy
    networks:
      - casino-net

  casino-consumer: 
    build:
      context: ./
      dockerfile: ./Dockerfile.consumer.dev
    volumes:
      - .:/app
      - ./.build/.docker/api/gocache/:/go/pkg/mod/cache/
      - ./:/app
    environment:
      - KAFKA_URL=kafka:29092
    depends_on:
      zookeeper: 
        condition: service_healthy
    networks:
      - casino-net
  
  postgres:
    image: postgres:15
    container_name: casino_postgres
    environment:
      POSTGRES_USER: casino
      POSTGRES_PASSWORD: casino123
      POSTGRES_DB: casino_db
    ports:
      - "5432:5432"
    volumes:
      - .docker/pg:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - casino-net

  zookeeper:
    image: "confluentinc/cp-zookeeper:latest"
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      TZ: Sao_Paulo/Brazil
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "echo", "mntr | nc 127.0.0.1 2181 | grep -q 'zk_server_state=leader'"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - casino-net

  kafka:
    image: "confluentinc/cp-enterprise-kafka:latest"
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - '9092:9092'
    environment:
      TZ: Sao_Paulo/Brazil
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: 'false'
    networks:
      - casino-net

  kafka-producer:
    build:
      context: ./
      dockerfile: Dockerfile.producer.dev
    depends_on:
      - kafka
    networks:
      - casino-net

volumes:
  postgres_data:

networks:
  casino-net:
    driver: bridge